{% extends 'base.html.twig' %}

{% block title %}Jeux{% endblock %}

{% block body %}
    <h3>Les tags disponible</h3>
    <div class="tags">
      {% for tag in taglist %}
        <a href="#" class="tags" data-tag="{{ tag.title }} ">{{ tag.title }}</a>
      {% endfor %}
    </div>
    {% if games %}
      <h1>{{ games[0].category.name is not defined ? "Nos produits" : "Nos #{games[0].category.name}" }}</h1>
      <div class="products">
        {% for game in games %}
          <div class="product">
            <p><a href="{{ path('games_show', {id: game.id}) }}">{{ game.name }}</a></p>
            <p>Description: {{ game.description }}</p>
            <span>Prix:</span>
            <p class="price">{{ game.price }}</p>
            {% if game.productDetail.discount %}
              <p>  Discounted {{ game.discountedPrice }} </p>
            {% endif %}
            <div class="product-tags">
              <h4>Les tags</h4>
                {% for tag in game.tags %}
                    <span class="badge badge-dark">{{ tag.title }}</span>
                {% endfor %}
              </div>
            <form method="POST" action="{{ path('cart_add', {id:game.id}) }}">
              <button type="submit">Ajouter au panier</button>
            </form>
          </div>
        {% endfor %}
        <div class="navigation">
          {{ knp_pagination_render(games) }}
        </div>
      </div>
    {% else %}
      <h1>Aucun jeu dans cette cat√©gorie</h1>
    {% endif %}
    
    <script>  
        fetch('http://localhost:8000/games', {
          'headers': {
            'X-Requested-With': 'XMLHttpRequest'
          }
        })

        const a = document.querySelectorAll('.tags');
        a.forEach((obj) => {

            obj.addEventListener('click', function(e) {

                e.preventDefault();

                const currentTag = this.dataset.tag.trim()
                let url = new URL(window.location.href);
                let searchParams = url.searchParams.get('search');
                let page = url.searchParams.get('page');

                if(page) {
                  url.searchParams.set('page', 1)
                }

                let search = [];

                if (searchParams !== null && searchParams !== "") {

                    search = searchParams.trim().split(',')
                    search = search.indexOf(currentTag)  !== -1 ? search.filter((el) => el !== currentTag) : [...search, currentTag]
                    
                } else {
                    search = [...search, currentTag];
                }

               let uri = search.length > 0 ? `${search.join(',').trim()}` : ''
               if(uri != '') {

                url.searchParams.set('search', uri)

               } else {

                 url.searchParams.delete('search')

               }

              window.location.href = url.href
                
                
            });
        })
    
    </script>

{% endblock %}



